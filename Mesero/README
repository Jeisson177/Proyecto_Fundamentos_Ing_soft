Proyecto de Gestión de Reservas y Facturación para Meseros
Descripción del Proyecto
Este proyecto implementa una aplicación de gestión de reservas y facturación desde el punto de vista del mesero, siguiendo el patrón de diseño Vista-Controlador-Negocio. El sistema permite a los meseros aceptar o rechazar reservas, recibir clientes sin reserva, y generar facturas basadas en los platos seleccionados del menú.

Características principales:
Aceptación y gestión de reservas de clientes
Registro y gestión de clientes sin reserva
Selección de platos disponibles desde el menú para generar una factura
Visualización del historial de reservas y facturas
Autenticación del mesero para acceder al sistema

Estructura del Proyecto
El proyecto está organizado en cuatro capas principales:

Vista (View):

Interfaz de usuario para el mesero, donde puede gestionar reservas, recibir clientes sin reserva y seleccionar platos para facturar.
Ubicación: /src/main/resources/view/
Controlador (Controller):

Coordina la interacción entre la Vista y la capa de Negocio. Maneja las solicitudes del mesero para aceptar o rechazar reservas, gestionar clientes y generar facturas.
Ubicación: /src/main/java/controller/
Negocio (Business Logic):

Contiene las reglas de negocio para gestionar reservas, clientes y facturación. Define cómo se calculan los totales de facturas y cómo se validan las reservas.
Ubicación: /src/main/java/services/
Repositorio (Repository):

Se encarga de la persistencia de los datos, utilizando el patrón Repository para interactuar con la base de datos para la creación, consulta, actualización y eliminación (CRUD) de reservas, clientes y facturas.
Ubicación: /src/main/java/repository/
Requisitos
Lenguaje: El proyecto está desarrollado en Java.
Base de datos: MySQL.
Instalación
Clonar el repositorio:

bash
Copiar código
git clone https://github.com/Jeisson177/Proyecto_Fundamentos_Ing_soft.git
Configurar la base de datos:

Crear una base de datos con el siguiente script SQL: base de datos.txt .
Configurar las credenciales de acceso a la base de datos: usuario: root contraseña:cl.


Copiar código
mvn clean install
Ejecutar la aplicación:

Uso
Autenticación
El mesero debe iniciar sesión para acceder al sistema utilizando sus credenciales. Solo usuarios autorizados pueden gestionar reservas, clientes y generar facturas.

Gestión de Reservas
Visualizar Reservas:
El mesero puede ver las reservas pendientes y aceptarlas o rechazarlas.
Aceptar o Rechazar Reservas:
Desde el panel de administración, el mesero puede aceptar o rechazar reservas, lo cual actualizará el estado de las mismas en la base de datos.
Atender Clientes sin Reserva:
Si llega un cliente sin reserva, el mesero puede registrarlo rápidamente en el sistema, asignándole una mesa disponible.
Facturación
Seleccionar Platos del Menú:

El mesero puede seleccionar los platos que el cliente ha pedido del menú disponible. Cada plato tiene un precio y descripción.
Generar Factura:

Una vez seleccionado el pedido, el sistema generará automáticamente una factura con el detalle de los platos y el costo total, incluyendo impuestos y propina si es necesario.
Historial de Facturas:

El mesero puede consultar las facturas emitidas para verificar pagos y pedidos pasados.
Arquitectura
Vista-Controlador-Negocio: La interfaz de usuario, la lógica de negocio y la persistencia de datos están separadas en capas modulares, facilitando el mantenimiento y la escalabilidad del sistema.
Repository Pattern: La lógica de acceso a datos está abstraída en la capa de repositorio, permitiendo que la capa de negocio sea independiente de la implementación de la base de datos.
Contribuciones
Las contribuciones son bienvenidas. Para contribuir, por favor sigue estos pasos:

Haz un fork del repositorio.
Crea una nueva rama (git checkout -b feature/nueva-funcionalidad).
Haz tus cambios y realiza un commit (git commit -m 'Agregar nueva funcionalidad').
Sube tus cambios a tu rama (git push origin feature/nueva-funcionalidad).
Abre un pull request.
